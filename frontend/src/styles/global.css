/* Global Styles - Norwegian Events Site */

/* Base typography */
body {
  font-family: var(--font-family-base);
  font-size: var(--font-size-base);
  line-height: var(--line-height-normal);
  color: var(--color-blue);
  background-color: var(--color-background);
}

/* Set default text color for all elements */
* {
  color: inherit;
}

/* ============================================
   GLOBAL ACCESSIBILITY & UX PATTERNS
   ============================================ */

/* Note: prefers-reduced-motion is handled globally in reset.css */

/* Keyboard navigation - consistent focus styles for interactive elements */
a:focus-visible,
button:focus-visible,
.card:focus-visible,
[role="button"]:focus-visible {
  outline: 2px solid var(--color-blue);
  outline-offset: 2px;
}

/* ============================================
   HOVER PATTERN SYSTEM
   ============================================

   Three distinct hover patterns based on semantic HTML:

   CATEGORY 1: TEXT LINKS (Navigation)
   - Semantic: <a> elements that navigate to pages
   - Default: Primary color, no underline
   - Hover: Darker color + underline appears
   - Examples: Navigation menu, "Les mer her", content links
   - Rule: a:hover { color: darker; text-decoration: underline; }

   CATEGORY 2: BUTTONS (Actions)
   - Semantic: <button> elements or button-styled links
   - Default: Background + border + padding
   - Hover: Background darkens/lightens, NO underline ever
   - Examples: Date filters, language switcher, submit buttons
   - Rule: button:hover { background: darker; }
   - Special class: .link-button for <a> that look like buttons

   CATEGORY 3: CARDS (Containers)
   - Semantic: Clickable containers
   - Default: Shadow + border
   - Hover: Increased shadow ± lift effect
   - Examples: Event cards, artist cards
   - Rule: .card:hover { box-shadow: larger; transform: translateY(); }

   BEST PRACTICE: Always wrap hover states in @media (hover: hover)
   to prevent sticky hover states on touch devices.

   Example:
   @media (hover: hover) {
     .element:hover { ... }
   }
*/

/* Headings */
h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-family-heading);
  font-weight: var(--font-weight-bold);
  line-height: var(--line-height-tight);
  margin-top: var(--space-6);
  margin-bottom: var(--space-3);
}

h1 {
  font-size: var(--font-size-5xl);
  font-weight: var(--font-weight-bold);
}

h2 {
  font-size: var(--font-size-3xl);
}

h3 {
  font-size: var(--font-size-2xl);
}

h4 {
  font-size: var(--font-size-xl);
}

h5 {
  font-size: var(--font-size-lg);
}

h6 {
  font-size: var(--font-size-base);
}

/* Reset heading margins when first child */
h1:first-child, h2:first-child, h3:first-child,
h4:first-child, h5:first-child, h6:first-child {
  margin-top: 0;
}

/* Paragraphs */
p {
  margin-top: var(--space-4);
  margin-bottom: var(--space-4);
}

p:first-child {
  margin-top: 0;
}

p:last-child {
  margin-bottom: 0;
}

/* Links - Accessibility-first approach */
a {
  color: var(--color-link);
  text-decoration: underline;
  text-decoration-thickness: 1px;
  text-underline-offset: 0.2em;
  transition:
    color var(--transition-fast),
    text-decoration-thickness var(--transition-fast);
}

/* Arrow indicator */
a::after {
  content: ' →';
  display: inline;
  text-decoration: none;
}

/* Hover state - Multiple visual cues */
@media (hover: hover) {
  a:hover {
    color: var(--color-link-hover);
    text-decoration-thickness: 2px;
  }
}

/* Focus state - WCAG compliance */
a:focus-visible {
  outline: 2px solid var(--color-link);
  outline-offset: 2px;
  background-color: var(--color-link-focus-bg);
}

/* Active state - Immediate feedback */
a:active {
  color: var(--color-link-active);
}

/* Visited state - User orientation */
a:visited {
  color: var(--color-link-visited);
}

@media (hover: hover) {
  a:visited:hover {
    color: var(--color-link-visited-hover);
    text-decoration-thickness: 2px;
  }
}

/* External links get special indicator */
a[target="_blank"]::after,
a[rel~="external"]::after {
  content: ' ↗';
}

/* High contrast mode */
@media (prefers-contrast: high) {
  a {
    text-decoration-thickness: 2px;
    font-weight: var(--font-weight-medium);
  }
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  a {
    transition: none;
  }
}

/* Exception: Links styled as buttons (for CTAs and navigation that looks like actions) */
a.link-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--space-3) var(--space-5);
  background-color: rgba(27, 25, 143, 0.08);
  color: var(--color-blue);
  border: 1px solid var(--color-blue);
  text-decoration: none;
  font-weight: var(--font-weight-medium);
  transition: all var(--transition-base);
}

/* Remove underlines and arrows from non-text links */
a.link-button,
a.btn,
a.btn-primary,
a.btn-secondary,
a.btn-ghost,
a.card,
.event-card a,
.artist-card a,
.card-grid a,
nav a,
[role="navigation"] a {
  text-decoration: none;
}

a.link-button::after,
a.btn::after,
a.btn-primary::after,
a.btn-secondary::after,
a.btn-ghost::after,
a.card::after,
.event-card a::after,
.artist-card a::after,
.card-grid a::after,
nav a::after,
[role="navigation"] a::after {
  content: none;
}

/* Navigation hovers get underline */
@media (hover: hover) {
  nav a:hover,
  [role="navigation"] a:hover {
    text-decoration: underline;
    text-decoration-thickness: 2px;
  }
}

@media (hover: hover) {
  a.link-button:hover {
    background-color: rgba(0, 179, 154, 0.08);
    color: var(--color-blue);
    text-decoration: none;
  }
}

a.link-button:focus-visible {
  outline: 2px solid var(--color-blue);
  outline-offset: 2px;
}

a.link-button.active {
  background-color: var(--color-blue);
  color: white;
  border-color: var(--color-blue);
}

/* Lists */
ul, ol {
  margin-top: var(--space-4);
  margin-bottom: var(--space-4);
  padding-left: var(--space-6);
}

ul ul, ol ol, ul ol, ol ul {
  margin-top: var(--space-2);
  margin-bottom: var(--space-2);
}

li {
  margin-bottom: var(--space-2);
}

/* Intrinsic Container - Fluid and responsive */
.container {
  width: min(100% - var(--space-4), var(--container-max-width));
  margin-inline: auto;
  padding-inline: clamp(var(--space-3), 4vw, var(--space-6));
}

/* Utility classes */

/* Visually hidden - Accessible to screen readers but hidden visually */
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Text alignment - Using logical properties */
.text-start { text-align: start; }
.text-center { text-align: center; }
.text-end { text-align: end; }

/* Legacy text alignment (fallback) */
.text-left { text-align: left; }
.text-right { text-align: right; }

/* Text colors */
.text-primary { color: var(--color-text-primary); }
.text-secondary { color: var(--color-text-secondary); }
.text-disabled { color: var(--color-text-disabled); }
.text-error { color: var(--color-error); }
.text-success { color: var(--color-success); }

/* Brand color utilities */
.text-blue { color: var(--color-blue); }
.text-red { color: var(--color-red); }
.text-yellow { color: var(--color-yellow); }
.text-green { color: var(--color-green); }

.bg-blue { background-color: var(--color-blue); }
.bg-red { background-color: var(--color-red); }
.bg-yellow { background-color: var(--color-yellow); }
.bg-green { background-color: var(--color-green); }

/* Light background variants (for subtle accents) */
.bg-blue-light { background-color: var(--color-blue-50); }
.bg-red-light { background-color: var(--color-red-50); }
.bg-yellow-light { background-color: var(--color-yellow-50); }
.bg-green-light { background-color: var(--color-green-50); }

/* Font weights */
.font-light { font-weight: var(--font-weight-light); }
.font-normal { font-weight: var(--font-weight-normal); }
.font-medium { font-weight: var(--font-weight-medium); }
.font-semibold { font-weight: var(--font-weight-semibold); }
.font-bold { font-weight: var(--font-weight-bold); }

/* Logical spacing utilities - Better for internationalization */
.mbs-0 { margin-block-start: var(--space-0); }
.mbs-1 { margin-block-start: var(--space-1); }
.mbs-2 { margin-block-start: var(--space-2); }
.mbs-3 { margin-block-start: var(--space-3); }
.mbs-4 { margin-block-start: var(--space-4); }
.mbs-5 { margin-block-start: var(--space-5); }
.mbs-6 { margin-block-start: var(--space-6); }

.mbe-0 { margin-block-end: var(--space-0); }
.mbe-1 { margin-block-end: var(--space-1); }
.mbe-2 { margin-block-end: var(--space-2); }
.mbe-3 { margin-block-end: var(--space-3); }
.mbe-4 { margin-block-end: var(--space-4); }
.mbe-5 { margin-block-end: var(--space-5); }
.mbe-6 { margin-block-end: var(--space-6); }

.mis-0 { margin-inline-start: var(--space-0); }
.mis-1 { margin-inline-start: var(--space-1); }
.mis-2 { margin-inline-start: var(--space-2); }
.mis-3 { margin-inline-start: var(--space-3); }
.mis-4 { margin-inline-start: var(--space-4); }
.mis-auto { margin-inline-start: auto; }

.mie-0 { margin-inline-end: var(--space-0); }
.mie-1 { margin-inline-end: var(--space-1); }
.mie-2 { margin-inline-end: var(--space-2); }
.mie-3 { margin-inline-end: var(--space-3); }
.mie-4 { margin-inline-end: var(--space-4); }
.mie-auto { margin-inline-end: auto; }

.pbs-0 { padding-block-start: var(--space-0); }
.pbs-1 { padding-block-start: var(--space-1); }
.pbs-2 { padding-block-start: var(--space-2); }
.pbs-3 { padding-block-start: var(--space-3); }
.pbs-4 { padding-block-start: var(--space-4); }

.pbe-0 { padding-block-end: var(--space-0); }
.pbe-1 { padding-block-end: var(--space-1); }
.pbe-2 { padding-block-end: var(--space-2); }
.pbe-3 { padding-block-end: var(--space-3); }
.pbe-4 { padding-block-end: var(--space-4); }

.pis-0 { padding-inline-start: var(--space-0); }
.pis-1 { padding-inline-start: var(--space-1); }
.pis-2 { padding-inline-start: var(--space-2); }
.pis-3 { padding-inline-start: var(--space-3); }
.pis-4 { padding-inline-start: var(--space-4); }

.pie-0 { padding-inline-end: var(--space-0); }
.pie-1 { padding-inline-end: var(--space-1); }
.pie-2 { padding-inline-end: var(--space-2); }
.pie-3 { padding-inline-end: var(--space-3); }
.pie-4 { padding-inline-end: var(--space-4); }

/* Legacy spacing utilities (kept for compatibility) */
.mt-0 { margin-top: var(--space-0); }
.mt-1 { margin-top: var(--space-1); }
.mt-2 { margin-top: var(--space-2); }
.mt-3 { margin-top: var(--space-3); }
.mt-4 { margin-top: var(--space-4); }
.mt-5 { margin-top: var(--space-5); }
.mt-6 { margin-top: var(--space-6); }

.mb-0 { margin-bottom: var(--space-0); }
.mb-1 { margin-bottom: var(--space-1); }
.mb-2 { margin-bottom: var(--space-2); }
.mb-3 { margin-bottom: var(--space-3); }
.mb-4 { margin-bottom: var(--space-4); }
.mb-5 { margin-bottom: var(--space-5); }
.mb-6 { margin-bottom: var(--space-6); }

.p-0 { padding: var(--space-0); }
.p-1 { padding: var(--space-1); }
.p-2 { padding: var(--space-2); }
.p-3 { padding: var(--space-3); }
.p-4 { padding: var(--space-4); }
.p-5 { padding: var(--space-5); }
.p-6 { padding: var(--space-6); }

/* Display utilities */
.hidden { display: none; }
.block { display: block; }
.inline-block { display: inline-block; }
.flex { display: flex; }
.inline-flex { display: inline-flex; }
.grid { display: grid; }

/* Flexbox utilities */
.flex-row { flex-direction: row; }
.flex-col { flex-direction: column; }
.flex-wrap { flex-wrap: wrap; }
.items-start { align-items: flex-start; }
.items-center { align-items: center; }
.items-end { align-items: flex-end; }
.justify-start { justify-content: flex-start; }
.justify-center { justify-content: center; }
.justify-end { justify-content: flex-end; }
.justify-between { justify-content: space-between; }
.gap-1 { gap: var(--space-1); }
.gap-2 { gap: var(--space-2); }
.gap-3 { gap: var(--space-3); }
.gap-4 { gap: var(--space-4); }
.gap-5 { gap: var(--space-5); }
.gap-6 { gap: var(--space-6); }

/* Intrinsic Grid utilities - Content-driven layouts */
.auto-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(min(300px, 100%), 1fr));
  gap: var(--space-4);
}

.auto-grid-dense {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(min(250px, 100%), 1fr));
  gap: var(--space-4);
  grid-auto-flow: dense;
}

.responsive-columns {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(clamp(250px, 40vw, 400px), 1fr));
  gap: clamp(var(--space-3), 3vw, var(--space-6));
}

/* Card grid - Perfect for event/artist cards */
.card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(min(100%, max(280px, 25ch)), 1fr));
  gap: clamp(var(--space-3), 2.5vw, var(--space-6));
}

/* Legacy grid utilities (for fallback) */
.grid-cols-1 { grid-template-columns: repeat(1, 1fr); }
.grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
.grid-cols-3 { grid-template-columns: repeat(3, 1fr); }
.grid-cols-4 { grid-template-columns: repeat(4, 1fr); }

/* Intrinsic Card component with container queries */
.card {
  container-type: inline-size;
  background: var(--color-background);
  border: 1px solid var(--color-border);
  padding: clamp(var(--space-3), 4cqw, var(--space-6));
  box-shadow: var(--shadow-sm);
  transition: box-shadow var(--transition-base);
}

@media (hover: hover) {
  .card:hover {
    box-shadow: var(--shadow-md);
  }
}

@container (min-width: 300px) {
  .card {
    padding: var(--space-5);
  }
}

@container (min-width: 500px) {
  .card {
    padding: var(--space-6);
  }
}

/* Button base styles */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--space-3) var(--space-5);
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-medium);
  line-height: 1;
  border: 1px solid transparent;
  cursor: pointer;
  transition: all var(--transition-fast);
  text-decoration: none;
}

@media (hover: hover) {
  .btn:hover {
    text-decoration: none;
  }
}

.btn:focus-visible {
  outline: 2px solid var(--color-blue);
  outline-offset: 2px;
}

/* Button variants */
.btn-primary,
a.btn-primary {
  background-color: var(--color-blue);
  color: white !important;
  border-color: transparent;
}

@media (hover: hover) {
  .btn-primary:hover,
  a.btn-primary:hover {
    background-color: rgba(0, 179, 154, 0.08);
    color: var(--color-blue) !important;
    border-color: var(--color-blue);
  }
}

.btn-secondary {
  background-color: var(--color-surface);
  border-color: var(--color-border);
}

@media (hover: hover) {
  .btn-secondary:hover {
    background-color: var(--color-neutral-100);
  }
}

.btn-ghost {
  background-color: transparent;
}

@media (hover: hover) {
  .btn-ghost:hover {
    background-color: var(--color-neutral-100);
  }
}

/* Badge/Tag styles */
.badge {
  display: inline-flex;
  align-items: center;
  padding: var(--space-1) var(--space-3);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  background-color: var(--color-neutral-100);
}

.badge-primary {
  background-color: var(--color-blue-100);
}

.badge-success {
  background-color: #d4edda;
}

/* Brand color badge variants */
.badge-blue {
  background-color: var(--color-blue-100);
}

.badge-red {
  background-color: var(--color-red-100);
}

.badge-yellow {
  background-color: var(--color-yellow-100);
}

.badge-green {
  background-color: var(--color-green-100);
}

/* Form elements */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="number"],
input[type="tel"],
input[type="search"],
input[type="url"],
textarea,
select {
  width: 100%;
  padding: var(--space-3) var(--space-4);
  font-size: var(--font-size-base);
  border: 1px solid var(--color-border);
  background-color: var(--color-background);
  transition: border-color var(--transition-fast);
}

input:focus,
textarea:focus,
select:focus {
  outline: none;
  border-color: var(--color-blue);
  box-shadow: 0 0 0 3px rgba(27, 25, 143, 0.1);
}

/* Container Queries - Modern responsive design */
@container (max-width: 480px) {
  .container-responsive {
    padding-inline: var(--space-2);
  }
}

/* Utility classes for layout decisions only (not component styling) */
@media (max-width: 768px) {
  .md\:hidden { display: none; }
}

@media (min-width: 769px) {
  .md\:flex { display: flex; }
}

/* Screen reader only */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* ============================================
   BROWSER FALLBACKS FOR CONTAINER QUERIES
   ============================================

   Container queries have 93%+ browser support (2024).
   These fallbacks provide graceful degradation for the ~7%
   of users on older browsers.

   Strategy: Provide traditional responsive patterns as fallback,
   then enhance with container queries when supported.
*/

/* Fallback for browsers without container query support */
@supports not (container-type: inline-size) {
  /* Card component fallback - use traditional padding */
  .card {
    padding: var(--space-4);
  }

  @media (min-width: 600px) {
    .card {
      padding: var(--space-5);
    }
  }

  @media (min-width: 900px) {
    .card {
      padding: var(--space-6);
    }
  }

  /* Card grid fallback - ensure minimum usable width */
  .card-grid {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  }

  @media (max-width: 600px) {
    .card-grid {
      grid-template-columns: 1fr;
    }
  }

  /* Responsive columns fallback */
  .responsive-columns {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }

  @media (max-width: 650px) {
    .responsive-columns {
      grid-template-columns: 1fr;
    }
  }
}

/* Container query support is available - use modern patterns */
@supports (container-type: inline-size) {
  /* This is the default path for 93%+ of users */
  /* All container query rules in the file above will work */

  /* Add explicit container-type to ensure components can use container queries */
  .card-grid,
  .auto-grid,
  .responsive-columns {
    container-type: inline-size;
  }
}