---
import Layout from "../../layouts/Layout.astro";
import DynamicComponent from "../../components/DynamicComponent.astro";
import { createDataService } from "../../lib/sanity/dataService.js";
import { getMultilingualContent } from "../../lib/utils/language.js";

const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect('/404');
}

// Create data service with Visual Editing support
const dataService = createDataService(Astro.request);

let article = null;

try {
  article = await dataService.getArticleBySlug(slug);

  if (!article) {
    return Astro.redirect('/404');
  }
} catch (error) {
  console.error('Error loading article:', error);
  return Astro.redirect('/404');
}

// Get appropriate content array
const content = getMultilingualContent(article) || article.content;

export async function getStaticPaths() {
  // In development, return empty array for on-demand rendering
  if (import.meta.env.DEV) {
    return [];
  }

  const dataService = new (await import("../../lib/sanity/dataService.js")).SanityDataService();
  return await dataService.getSlugsForType('article');
}
---

<Layout title={article.title}>
  <main>
    <article>
      <header>
        <h1>{article.title}</h1>
        {article.excerpt && <p class="excerpt">{article.excerpt}</p>}
        {article.publishedAt && (
          <time datetime={new Date(article.publishedAt).toISOString()}>
            {new Intl.DateTimeFormat('no-NO', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            }).format(new Date(article.publishedAt))}
          </time>
        )}
        {article.author && (
          <p class="author">Av {article.author.name}</p>
        )}
      </header>

      {content && Array.isArray(content) && (
        <div class="article-content">
          {content.map((block) => (
            <DynamicComponent key={block._key || block._id} block={block} />
          ))}
        </div>
      )}
    </article>
  </main>
</Layout>

<style>
  main {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }

  article header {
    margin-bottom: 3rem;
    border-bottom: 1px solid #eee;
    padding-bottom: 2rem;
  }

  h1 {
    font-size: 2.5rem;
    font-weight: bold;
    line-height: 1.2;
    margin-bottom: 1rem;
  }

  .excerpt {
    font-size: 1.25rem;
    line-height: 1.5;
    margin-bottom: 1rem;
  }

  time {
    font-size: 0.9rem;
  }

  .author {
    font-style: italic;
    margin-top: 0.5rem;
  }

  .article-content {
    line-height: 1.6;
  }

  @media (max-width: 768px) {
    main {
      padding: 1rem;
    }

    h1 {
      font-size: 2rem;
    }

    .excerpt {
      font-size: 1.1rem;
    }
  }
</style> 