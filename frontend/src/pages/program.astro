---
import type { SanityDocument } from "@sanity/client";
import { sanityClient } from "sanity:client";
import EventFilter from '../components/EventFilter.astro';
import Image from '../components/Image.astro';
import imageUrlBuilder from "@sanity/image-url";
import type { SanityImageSource } from "@sanity/image-url/lib/types/types";

// Hent filter-opsjoner (eventDates, genres og venues)
const eventDates = await sanityClient.fetch(`*[_type == "eventDate" && isActive == true] | order(date asc)`);
const genres = await sanityClient.fetch(`*[_type == "genre"] | order(title asc)`);
const venues = await sanityClient.fetch(`*[_type == "venue"] | order(title asc)`);

// Hent URL-parametere for initial state
const url = new URL(Astro.request.url);
const initialFilters = {
  eventDate: url.searchParams.get('eventDate') || '',
  genre: url.searchParams.get('genre') || '',
  venue: url.searchParams.get('venue') || '',
};

// Hent arrangementer basert på filtre
let eventsQuery = `*[_type == "event" && isPublished == true`;
const queryParams: any = {};

if (initialFilters.eventDate) {
  eventsQuery += ` && eventDate->date == $eventDate`;
  queryParams.eventDate = initialFilters.eventDate;
}

if (initialFilters.genre) {
  eventsQuery += ` && genre->slug.current == $genre`;
  queryParams.genre = initialFilters.genre;
}

if (initialFilters.venue) {
  eventsQuery += ` && venue->slug.current == $venue`;
  queryParams.venue = initialFilters.venue;
}

eventsQuery += `] | order(eventDate->date asc) {
  _id, 
  title, 
  slug,
  eventTime{
    startTime,
    endTime
  },
  eventDate->{
    title,
    date
  },
  venue->{
    title
  },
  genre->{
    title
  },
  artists[]->{
    name
  },
  image
}`;

const events = await sanityClient.fetch<SanityDocument[]>(eventsQuery, queryParams);
---

<html lang="no">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Program - Sanity + Astro</title>
  <!-- HTMX -->
  <script is:inline src="/htmx.min.js"></script>
  <script>
    // Aktiver HTMX logging for debugging når HTMX er lastet
    document.addEventListener('DOMContentLoaded', function() {
      if (typeof htmx !== 'undefined' && htmx.logAll) {
        htmx.logAll();
      }
    });
  </script>
</head>
<body>
  <main style="max-width: 1200px; margin: 0 auto; padding: 2rem;">
    <header style="margin-bottom: 2rem;">
      <h1 style="margin: 0 0 0.5rem 0; color: #333;">🎭 Program</h1>
      <p style="margin: 0; color: #666; font-size: 1.1rem;">
        Utforsk våre kommende arrangementer og finn noe som passer deg
      </p>
    </header>
    
    <!-- Filter-komponent -->
    <EventFilter 
      initialFilters={initialFilters}
      filterOptions={{
        eventDates,
        genres,
        venues
      }}
    />
    
    <!-- Resultater -->
    <div id="results-container">
      <div id="event-results">
        {events.length > 0 ? (
          <div>
            <div style="margin-bottom: 1rem; padding: 0.5rem; background: #e8f5e8; border-radius: 4px; color: #2d5a2d;">
              📊 Viser {events.length} arrangement{events.length === 1 ? '' : 'er'}
            </div>
            <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(350px, 1fr)); gap: 1.5rem;">
              {events.map((event) => (
                <div style="border: 1px solid #e9ecef; border-radius: 12px; background: white; overflow: hidden; transition: all 0.2s ease; box-shadow: 0 2px 8px rgba(0,0,0,0.1); hover: { box-shadow: 0 4px 16px rgba(0,0,0,0.15); }" data-event-date={event.eventDate?.date}>
                  <a href={`/program/${event.slug.current}`} style="text-decoration: none; color: inherit; display: block;">
                    {event.image && (
                      <div style="position: relative; height: 200px; overflow: hidden;">
                        <Image 
                          image={event.image.image}
                          alt={event.image.alt || event.title}
                          caption=""
                          credit=""
                          size="full"
                          aspectRatio="16:9"
                          alignment="center"
                          className="event-card-image"
                        />
                      </div>
                    )}
                    <div style="padding: 1.25rem;">
                      <h3 style="margin: 0 0 0.75rem 0; color: #333; font-size: 1.2rem; line-height: 1.3;">{event.title}</h3>
                      
                      <div style="color: #666; font-size: 0.9rem; line-height: 1.4;">
                        {event.eventDate && (
                          <div style="margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                            <span style="font-size: 1rem;">📅</span>
                            <span>{event.eventDate.title} ({new Date(event.eventDate.date).toLocaleDateString('nb-NO')})</span>
                          </div>
                        )}
                        
                        {event.eventTime && (
                          <div style="margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                            <span style="font-size: 1rem;">🕐</span>
                            <span>{event.eventTime.startTime} - {event.eventTime.endTime}</span>
                          </div>
                        )}
                        
                        {event.venue && (
                          <div style="margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                            <span style="font-size: 1rem;">🏢</span>
                            <span>{event.venue.title}</span>
                          </div>
                        )}
                        
                        {event.artists && event.artists.length > 0 && (
                          <div style="margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                            <span style="font-size: 1rem;">🎵</span>
                            <span>{event.artists.map((artist: any) => artist.name).join(', ')}</span>
                          </div>
                        )}
                        
                        {event.genre && (
                          <div style="margin-top: 0.75rem; padding-top: 0.75rem; border-top: 1px solid #f0f0f0; display: flex; align-items: center; gap: 0.5rem;">
                            <span style="font-size: 1rem;">🎼</span>
                            <span style="color: #999; font-size: 0.85rem;">{event.genre.title}</span>
                          </div>
                        )}
                      </div>
                    </div>
                  </a>
                </div>
              ))}
            </div>
          </div>
        ) : (
          <div style="text-align: center; padding: 3rem; color: #666;">
            <div style="font-size: 4rem; margin-bottom: 1rem;">🔍</div>
            <h3 style="margin: 0 0 1rem 0; color: #333;">Ingen arrangementer funnet</h3>
            <p style="margin: 0; font-size: 1.1rem;">
              Prøv å endre filtrene eller <a href="/program" style="color: #007acc;">vis alle arrangementer</a>
            </p>
          </div>
        )}
      </div>
    </div>
    
    <footer style="margin-top: 3rem; padding-top: 2rem; border-top: 1px solid #e9ecef;">
      <a href="/" style="color: #007acc; text-decoration: none; font-weight: 500;">
        ← Tilbake til forsiden
      </a>
    </footer>
  </main>

  <style>
    .event-card-image .image-container {
      margin: 0;
      height: 100%;
    }
    
    .event-card-image .image {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 0;
    }
    
    .event-card-image .image-caption {
      display: none;
    }
  </style>

  <!-- 
    URL-OPPDATERING FOR FILTRERING
    ===============================
    
    Denne JavaScript-koden oppdaterer URL-en med query-parametere etter HTMX-filtrering,
    slik at URL-en blir bookmarkbar og delbar. Eksempel: /program?eventDate=2026-06-23&genre=jazz&venue=the-house
    
    Hvordan det fungerer:
    1. Lytter på 'htmx:afterRequest' event (når filtrering er ferdig)
    2. Henter valgte filtre fra HTMX-parametere
    3. Bygger ny URL med query-parametere
    4. Oppdaterer browser-historikk uten å laste siden på nytt
    
    Dette gjør at:
    - URL-en viser valgte filtre (bookmarkbar/delbar)
    - Refresh fungerer (siden leser URL-parametere)
    - Filtrering fungerer fortsatt (HTMX sender til API)
    - Browser-historikk fungerer (tilbake/frem-knapper)
  -->
  <script>
    // Lytter på HTMX-filtrering og oppdaterer URL-en
    document.addEventListener('htmx:afterRequest', function(event) {
      // Sjekk at dette er filtrerings-forespørselen (ikke andre HTMX-kall)
      if (event.detail.xhr.responseURL.includes('/api/filter-events')) {
        
        // Hent valgte filtre fra HTMX-parametere
        const hxVals = event.detail.elt.getAttribute('hx-vals');
        let selectedEventDate = '';
        let selectedGenre = '';
        let selectedVenue = '';
        
        if (hxVals) {
          try {
            const vals = JSON.parse(hxVals);
            selectedEventDate = vals.eventDate || '';
            selectedGenre = vals.genre || '';
            selectedVenue = vals.venue || '';
          } catch (e) {
            console.log('Kunne ikke parse hx-vals:', hxVals);
          }
        }
        
        // Bygg ny URL med query-parametere
        const currentUrl = new URL(window.location);
        
        // Legg til eller fjern eventDate-parameter basert på valg
        if (selectedEventDate) {
          currentUrl.searchParams.set('eventDate', selectedEventDate);
        } else {
          currentUrl.searchParams.delete('eventDate');
        }
        
        // Legg til eller fjern genre-parameter basert på valg
        if (selectedGenre) {
          currentUrl.searchParams.set('genre', selectedGenre);
        } else {
          currentUrl.searchParams.delete('genre');
        }
        
        // Legg til eller fjern venue-parameter basert på valg
        if (selectedVenue) {
          currentUrl.searchParams.set('venue', selectedVenue);
        } else {
          currentUrl.searchParams.delete('venue');
        }
        
        // Oppdater browser-historikk uten å laste siden på nytt
        // Dette gjør URL-en bookmarkbar og delbar
        window.history.pushState({}, '', currentUrl.toString());
      }
    });
  </script>
</body>
</html> 