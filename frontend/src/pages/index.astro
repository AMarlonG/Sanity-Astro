---
import Layout from '../layouts/Layout.astro';
import { sanityClient } from 'sanity:client';
import PortableText from '../components/PortableText.astro';
import Heading from '../components/Heading.astro';
import Image from '../components/Image.astro';
import Video from '../components/Video.astro';
import Button from '../components/Button.astro';
import Link from '../components/Link.astro';
import Quote from '../components/Quote.astro';
import Accordion from '../components/Accordion.astro';
import ContentScrollContainer from '../components/ContentScrollContainer.astro';
import ArtistScrollContainer from '../components/ArtistScrollContainer.astro';
import EventScrollContainer from '../components/EventScrollContainer.astro';

// Get Visual Editing perspective
const perspective = Astro.request.headers.get('cookie')?.includes('sanity-preview-mode=true') ? 'drafts' : 'published';

// Load homepage
const homepage = await sanityClient.fetch(
  `*[_type == "homepage" && (homePageType == "default" || 
    (homePageType == "scheduled" && 
     scheduledPeriod.startDate <= now() && 
     scheduledPeriod.endDate >= now()))] | order(homePageType desc)[0]{
    _id,
    title,
    homePageType,
    scheduledPeriod,
    content
  }`,
  {},
  {
    perspective,
    useCdn: perspective === 'published',
    token: import.meta.env.SANITY_API_READ_TOKEN,
    stega: import.meta.env.PUBLIC_SANITY_VISUAL_EDITING_ENABLED === 'true'
  }
);

const homepageTitle = homepage?.title || 'Forside';

// Smart caching basert p책 innholdstype
if (homepage?.scheduledPeriod) {
  const timeUntilExpiry = new Date(homepage.scheduledPeriod.endDate).getTime() - Date.now();
  const cacheTime = Math.min(timeUntilExpiry / 1000, 300); // Maks 5 minutter
  
  Astro.response.headers.set('Cache-Control', `public, max-age=${cacheTime}`);
} else {
  Astro.response.headers.set('Cache-Control', 'public, max-age=3600'); // 1 time
}

console.log('Aktiv forside:', homepage);
---

<Layout title={homepageTitle}>
  <main class="container" transition:name="main-content">
    {homepage ? (
      <div>
        <h1 transition:name="page-title">{homepageTitle}</h1>
        
        <!-- Navigasjonslenker -->
        <nav style="margin: 2rem 0; padding: 1rem 0; border-bottom: 1px solid #eee;">
          <ul style="list-style: none; padding: 0; margin: 0; display: flex; gap: 2rem; justify-content: center;">
            <li><a href="/program" style="text-decoration: none; color: #333; font-weight: 500; padding: 0.5rem 1rem; border-radius: 4px; transition: background-color 0.2s;">Program</a></li>
            <li><a href="/artister" style="text-decoration: none; color: #333; font-weight: 500; padding: 0.5rem 1rem; border-radius: 4px; transition: background-color 0.2s;">Artister</a></li>
            <li><a href="/artikler" style="text-decoration: none; color: #333; font-weight: 500; padding: 0.5rem 1rem; border-radius: 4px; transition: background-color 0.2s;">Artikler</a></li>
          </ul>
        </nav>
        
        {homepage?.content && Array.isArray(homepage.content) && (
          <div>
            {homepage.content.map((block) => (
              <div key={block._key || block._id}>
                {block._type === 'portableTextBlock' && <PortableText content={block.content} />}
                {block._type === 'headingComponent' && <Heading level={block.level} text={block.text} id={block.id} />}
                {block._type === 'imageComponent' && <Image image={block.image} alt={block.alt} caption={block.caption} />}
                {block._type === 'videoComponent' && <Video url={block.url} title={block.title} thumbnail={block.thumbnail} />}
                {block._type === 'buttonComponent' && <Button text={block.text} style={block.style} size={block.size} action={block.action} />}
                {block._type === 'linkComponent' && <Link text={block.text} url={block.url} openInNewTab={block.openInNewTab} />}
                {block._type === 'quoteComponent' && <Quote quote={block.quote} author={block.author} />}
                {block._type === 'accordionComponent' && <Accordion title={block.title} content={block.content} />}
                {block._type === 'contentScrollContainer' && <ContentScrollContainer title={block.title} items={block.items} spacing={block.spacing} />}
                {block._type === 'artistScrollContainer' && <ArtistScrollContainer title={block.title} items={block.items} cardFormat={block.cardFormat} />}
                {block._type === 'eventScrollContainer' && <EventScrollContainer title={block.title} events={block.events} cardFormat={block.cardFormat} />}
                {/* Fallback for ukjent type */}
                {[ 'portableTextBlock', 'headingComponent', 'imageComponent', 'videoComponent', 'buttonComponent', 'linkComponent', 'quoteComponent', 'accordionComponent', 'contentScrollContainer', 'artistScrollContainer', 'eventScrollContainer' ].indexOf(block._type) === -1 && (
                  <div>Ukjent komponent: {block._type}</div>
                )}
              </div>
            ))}
          </div>
        )}
      </div>
    ) : (
      <div>
        <h1>Velkommen til forsiden</h1>
        <p>Ingen forside er konfigurert enn책. G책 til Sanity Studio for 책 opprette en forside.</p>
      </div>
    )}
  </main>
</Layout>
