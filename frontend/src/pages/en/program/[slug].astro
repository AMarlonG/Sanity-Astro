---
import Layout from '../../../layouts/Layout.astro';
import DynamicComponent from '../../../components/DynamicComponent.astro';
import { formatDateForLanguage } from '../../../lib/utils/dates';
import { getMultilingualContent } from "../../../lib/utils/language.js";
import { getOptimizedImageUrl, getResponsiveSrcSet, IMAGE_QUALITY, RESPONSIVE_WIDTHS } from '../../../lib/imageHelpers';
import type { SanityDocument } from '@sanity/client';
import { loadQuery } from '../../../lib/sanity/loadQuery.js';

// Generate static paths for all events with English slugs
export async function getStaticPaths() {
  const { data: events } = await loadQuery<SanityDocument[]>({
    query: `*[_type == "event" && (defined(slug_en.current) || defined(slug_no.current))]`,
  });

  return events.map((event) => {
    // Use English slug, fallback to Norwegian slug
    const slug = event.slug_en?.current || event.slug_no?.current;
    return {
      params: { slug },
    };
  });
}

const { params } = Astro;

// Fetch the specific event based on the slug parameter (English priority)
const { data: event } = await loadQuery({
  query: `*[_type == "event" && $slug in [slug_en.current, slug_no.current, slug.current]][0]{
    _id,
    _type,
    title_en,
    "title": title_en,
    slug_en,
    excerpt_en,
    "image": {
      "image": image{
        asset->,
        hotspot,
        crop
      },
      "alt": coalesce(imageAlt_en, imageAlt_no, image.alt),
      "credit": coalesce(imageCredit_en, imageCredit_no)
    },
    eventDate->{
      _id,
      date,
      title_display_en,
      "title": title_display_en
    },
    eventTime,
    venue->{
      _id,
      title,
      name,
      address,
      city,
      "slug": slug.current
    },
    "artists": artist[]-> {
      _id,
      name,
      "slug": slug.current,
      image,
      "imageAlt": coalesce(imageAlt_en, imageAlt_no)
    },
    ticketType,
    ticketUrl,
    content_en,
    seo
  }`,
  params,
});

if (!event) {
  return Astro.redirect('/404');
}

// Get English content
const content = getMultilingualContent(event, 'en') || event.content_en;
---

<Layout title={`${event.title} - Event`}>
  <main>
    <nav class="breadcrumb">
      <button type="button" onclick="history.back()" class="back-button">‚Üê Back to program</button>
      <noscript>
        <a href="/en/program">‚Üê Back to program</a>
      </noscript>
    </nav>

    <article>
      <header>
        <h1>{event.title}</h1>

        {event.image?.image && (
          <figure class="event-image">
            <picture>
              <source
                srcset={getResponsiveSrcSet(event.image.image, RESPONSIVE_WIDTHS.HERO, IMAGE_QUALITY.HERO)}
                type="image/webp"
                sizes="(max-width: 768px) 100vw, 800px"
              />
              <img
                src={getOptimizedImageUrl(event.image.image, 800, null, IMAGE_QUALITY.HERO)}
                alt={event.image.alt || event.title}
                loading="eager"
                decoding="async"
              />
            </picture>
          </figure>
        )}

        <div class="event-info">
          {event.eventDate && (
            <div class="event-detail">
              <strong>üìÖ Date:</strong>
              <span>{formatDateForLanguage(event.eventDate.date, 'en')}</span>
            </div>
          )}

          {event.eventTime && (
            <div class="event-detail">
              <strong>üï∞Ô∏è Time:</strong>
              <span>{event.eventTime.startTime} - {event.eventTime.endTime}</span>
            </div>
          )}

          {event.venue && (
            <div class="event-detail">
              <strong>üé≠ Venue:</strong>
              <span>
                {event.venue.name}
                {event.venue.address && (
                  <span class="address">, {event.venue.address}</span>
                )}
                {event.venue.city && (
                  <span class="city">, {event.venue.city}</span>
                )}
              </span>
            </div>
          )}

          {event.artists && event.artists.length > 0 && (
            <div class="event-detail artists">
              <strong>üé§ Artists:</strong>
              <ul>
                {event.artists.map((artist) => (
                  <li>
                    <span class="artist-name">{artist.name}</span>
                    {artist.image && (
                      <picture>
                        <img
                          src={getOptimizedImageUrl(artist.image, 64, 64, IMAGE_QUALITY.THUMBNAIL)}
                          alt={artist.imageAlt || artist.name}
                          class="artist-avatar"
                          loading="lazy"
                          decoding="async"
                        />
                      </picture>
                    )}
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>

        {event.ticketType === 'free' ? (
          <div class="ticket-section">
            <p class="ticket-info-text">Free</p>
          </div>
        ) : event.ticketUrl ? (
          <div class="ticket-section">
            <a
              href={event.ticketUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="ticket-button"
            >
              Buy tickets
            </a>
          </div>
        ) : (
          <div class="ticket-section">
            <p class="ticket-info-text">Sales starting soon</p>
          </div>
        )}
      </header>

      {/* PageBuilder content from CMS */}
      {content && Array.isArray(content) && content.length > 0 && (
        <div class="event-content">
          {content.map((block) => (
            <DynamicComponent key={block._key || block._id} block={block} />
          ))}
        </div>
      )}
    </article>
  </main>
</Layout>

<style>
  main {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }

  .breadcrumb {
    margin-bottom: 2rem;
  }

  .breadcrumb a,
  .breadcrumb .back-button {
    text-decoration: none;
    background: none;
    border: none;
    padding: 0;
    font: inherit;
    cursor: pointer;
    display: inline;
  }

  .breadcrumb .back-button:hover {
    text-decoration: underline;
  }

  article header {
    margin-bottom: 3rem;
  }

  h1 {
    font-size: 2.5rem;
    font-weight: bold;
    line-height: 1.2;
    margin-bottom: 2rem;
  }

  .event-image {
    margin-bottom: 2rem;
  }

  .event-image img {
    width: 100%;
    height: auto;
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
  }

  .event-info {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    padding: 2rem;
    margin-bottom: 2rem;
    border: 1px solid #dee2e6;
  }

  .event-detail {
    display: flex;
    margin-bottom: 1rem;
    align-items: flex-start;
  }

  .event-detail:last-child {
    margin-bottom: 0;
  }

  .event-detail strong {
    min-width: 140px;
    margin-right: 1rem;
  }

  .address,
  .city {
  }

  .artists ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  .artists li {
    display: flex;
    align-items: center;
    margin-bottom: 0.5rem;
    padding: 0.5rem;
    background: rgba(255, 255, 255, 0.5);
  }

  .artist-name {
    font-weight: 500;
  }

  .artist-avatar {
    width: 32px;
    height: 32px;
    margin-left: auto;
    object-fit: cover;
  }

  .ticket-section {
    text-align: center;
    margin: 2rem 0;
  }

  .ticket-button {
    display: inline-block;
    background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
    padding: 1rem 2rem;
    text-decoration: none;
    font-weight: bold;
    font-size: 1.1rem;
    transition: all 0.2s ease;
    box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
  }

  .ticket-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 123, 255, 0.4);
  }

  .ticket-info-text {
    display: inline-block;
    padding: 1rem 2rem;
    font-weight: 500;
    font-size: 1.1rem;
    font-style: italic;
  }

  @media (max-width: 768px) {
    main {
      padding: 1rem;
    }

    h1 {
      font-size: 2rem;
    }

    .event-info {
      padding: 1.5rem;
    }

    .event-detail {
      flex-direction: column;
      align-items: flex-start;
    }

    .event-detail strong {
      margin-bottom: 0.25rem;
      margin-right: 0;
    }

    .ticket-button {
      padding: 0.75rem 1.5rem;
      font-size: 1rem;
    }
  }
</style>
