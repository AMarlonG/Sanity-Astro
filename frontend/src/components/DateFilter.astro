---
import { formatDateWithWeekday } from '../lib/utils/dates';

interface Props {
  availableDates: Array<{ date: string; title?: string }>;
  language: 'no' | 'en';
}

const { availableDates, language } = Astro.props;

// Extract unique dates from events and sort
const uniqueDates = Array.from(
  new Set(availableDates.map(d => d.date))
).sort();

// Get current date from URL
const currentDate = Astro.url.searchParams.get('date') || '';
---

{uniqueDates.length > 0 && (
  <div class="date-filter">
    <div
      class="date-filter-buttons"
      role="region"
      aria-label={language === 'no' ? 'Filtrer etter dato' : 'Filter by date'}
      tabindex="0"
    >
      <a
        href={language === 'no' ? '/program' : '/en/program'}
        class:list={['link-button', { active: !currentDate }]}
        hx-get={`/api/filter-program?lang=${language}`}
        hx-target="#event-results"
        hx-swap="innerHTML show:none"
        hx-indicator="#filter-loading"
      >
        {language === 'no' ? 'Alle datoer' : 'All dates'}
      </a>

      {uniqueDates.map(date => (
        <a
          href={`${language === 'no' ? '/program' : '/en/program'}?date=${date}`}
          class:list={['link-button', { active: currentDate === date }]}
          hx-get={`/api/filter-program?date=${date}&lang=${language}`}
          hx-target="#event-results"
          hx-swap="innerHTML show:none"
          hx-indicator="#filter-loading"
        >
          {formatDateWithWeekday(date, language)}
        </a>
      ))}
    </div>
  </div>
)}
