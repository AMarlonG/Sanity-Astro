---
import Image from './Image.astro'
import Video from './Video.astro'
import Button from './Button.astro'
import Title from './Title.astro'
import Quote from './Quote.astro'
import Heading from './Heading.astro'
import PortableText from './PortableText.astro'

export interface Props {
  title: string
  description?: string
  panels?: Array<{
    title: string
    content: any[]
  }>
  accessibility?: {
    ariaLabel?: string
    ariaDescribedBy?: string
  }
  className?: string
}

const {
  title,
  description,
  panels = [],
  accessibility,
  className = ''
} = Astro.props

// Generer unike IDer for hvert panel
const panelIds = panels.map((_, index) => `panel-${index}`)
const buttonIds = panels.map((_, index) => `button-${index}`)
---

<div class={`accordion ${className}`}>
  {title && <h2 class="accordion-title">{title}</h2>}
  {description && <p class="accordion-description">{description}</p>}
  
  <div class="accordion-panels">
    {panels && panels.length > 0 ? (
      panels.map((panel, index) => (
        <div class="accordion-panel">
          <button 
            class="accordion-button" 
            id={buttonIds[index]}
            aria-expanded="false" 
            aria-controls={panelIds[index]}
          >
            <span class="accordion-button-text">{panel.title}</span>
            <span class="accordion-icon" aria-hidden="true"></span>
          </button>
          <div 
            class="accordion-content" 
            id={panelIds[index]} 
            aria-labelledby={buttonIds[index]} 
            aria-hidden="true"
          >
            <div class="panel-content">
              {panel.content && panel.content.length > 0 ? (
                panel.content.map((item) => {
                  switch (item._type) {
                    case 'block':
                      return <PortableText value={[item]} />
                    case 'imageComponent':
                      return <Image {...item} />
                    case 'videoComponent':
                      return <Video {...item} />
                    case 'buttonComponent':
                      return <Button {...item} />
                    case 'title':
                      return <Title {...item} />
                    case 'quoteComponent':
                      return <Quote {...item} />
                    case 'heading':
                      return <Heading {...item} />
                    default:
                      return <div>Ukjent komponent: {item._type}</div>
                  }
                })
              ) : (
                <div>Ingen innhold</div>
              )}
            </div>
          </div>
        </div>
      ))
    ) : (
      <div class="accordion-panel">
        <div class="accordion-content">
          <div class="panel-content">
            <p>Ingen paneler tilgjengelig</p>
          </div>
        </div>
      </div>
    )}
  </div>
</div>


<style>
  .accordion {
    max-width: 800px;
    margin: 2rem auto;
  }

  .accordion-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: #333;
  }

  .accordion-description {
    color: #666;
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  .accordion-panels {
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    overflow: hidden;
  }

  .accordion-panel {
    border-bottom: 1px solid #e0e0e0;
  }

  .accordion-panel:last-child {
    border-bottom: none;
  }

  .accordion-button {
    width: 100%;
    padding: 1rem 1.5rem;
    background: #f8f9fa;
    border: none;
    text-align: left;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    transition: background-color 0.2s ease;
  }

  .accordion-button:hover {
    background: #e9ecef;
  }

  .accordion-button:focus {
    outline: 2px solid #0066cc;
    outline-offset: -2px;
  }

  .accordion-button-text {
    font-weight: 500;
    color: #333;
  }

  .accordion-icon {
    width: 12px;
    height: 12px;
    border-right: 2px solid #666;
    border-bottom: 2px solid #666;
    transform: rotate(45deg);
    transition: transform 0.2s ease;
  }

  .accordion-button[aria-expanded="true"] .accordion-icon {
    transform: rotate(-135deg);
  }

  .accordion-content {
    display: none;
    padding: 1rem 1.5rem;
    background: white;
  }

  .accordion-content[aria-hidden="false"] {
    display: block;
  }

  .panel-content {
    line-height: 1.6;
    color: #333;
  }

  /* Tilgjengelighet */
  .accordion-button:focus-visible {
    outline: 2px solid #0066cc;
    outline-offset: -2px;
  }
</style> 