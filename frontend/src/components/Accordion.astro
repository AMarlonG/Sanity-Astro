---
import Image from './Image.astro'
import Video from './Video.astro'
import Button from './Button.astro'
import Title from './Title.astro'
import Quote from './Quote.astro'
import Heading from './Heading.astro'
import PortableText from './PortableText.astro'

export interface Props {
  title?: string
  description?: string
  panels?: Array<{
    title: string
    content: any[]
  }>
  className?: string
}

const {
  title,
  description,
  panels = [],
  className = ''
} = Astro.props
---

<div class={`accordion ${className}`}>
  {title && <h2 class="accordion-title">{title}</h2>}
  {description && <p class="accordion-description">{description}</p>}

  <div class="accordion-panels">
    {panels && panels.length > 0 ? (
      panels.map((panel) => (
        <details class="accordion-panel">
          <summary class="accordion-summary">
            {panel.title}
          </summary>
          <div class="accordion-content">
            {panel.content && panel.content.length > 0 ? (
              panel.content.map((item) => {
                switch (item._type) {
                  case 'block':
                    return <PortableText value={[item]} semantic="div" />
                  case 'imageComponent':
                    return <Image {...item} />
                  case 'videoComponent':
                    return <Video {...item} />
                  case 'buttonComponent':
                    return <Button {...item} />
                  case 'title':
                    return <Title {...item} />
                  case 'quoteComponent':
                    return <Quote {...item} />
                  case 'heading':
                    return <Heading {...item} />
                  default:
                    return <div>Ukjent komponent: {item._type}</div>
                }
              })
            ) : (
              <div>Ingen innhold</div>
            )}
          </div>
        </details>
      ))
    ) : (
      <div class="no-panels">
        <p>Ingen paneler tilgjengelig</p>
      </div>
    )}
  </div>
</div>


<style>
  .accordion {
    max-width: 800px;
    margin: 2rem auto;
  }

  .accordion-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1rem;
  }

  .accordion-description {
    margin-bottom: 1.5rem;
    line-height: 1.6;
  }

  .accordion-panels {
    border: 1px solid #e0e0e0;
    overflow: hidden;
  }

  .accordion-panel {
    border-bottom: 1px solid #e0e0e0;
  }

  .accordion-panel:last-child {
    border-bottom: none;
  }

  .accordion-summary {
    padding: 1rem 1.5rem;
    background: #f8f9fa;
    cursor: pointer;
    font-weight: 500;
    transition: background-color 0.2s ease;
    list-style: none;
    position: relative;
  }

  /* Remove default marker */
  .accordion-summary::-webkit-details-marker {
    display: none;
  }

  .accordion-summary::after {
    content: '';
    position: absolute;
    right: 1.5rem;
    top: 50%;
    transform: translateY(-50%) rotate(45deg);
    width: 8px;
    height: 8px;
    border-right: 2px solid #666;
    border-bottom: 2px solid #666;
    transition: transform 0.2s ease;
  }

  .accordion-panel[open] .accordion-summary::after {
    transform: translateY(-50%) rotate(-135deg);
  }

  .accordion-summary:hover {
    background: #e9ecef;
  }

  .accordion-summary:focus {
    outline: 2px solid #0066cc;
    outline-offset: -2px;
  }

  .accordion-content {
    padding: 1rem 1.5rem;
    background: white;
    line-height: 1.6;
  }

  .no-panels {
    padding: 1rem 1.5rem;
    text-align: center;
  }
</style> 