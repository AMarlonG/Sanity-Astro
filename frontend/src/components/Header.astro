---
import LanguageSwitcher from './LanguageSwitcher.astro';
import type { Language } from '../lib/utils/language.js';

interface Props {
  currentLang: Language;
  currentPath: string;
  slugNo?: string;
  slugEn?: string;
}

const { currentLang, currentPath, slugNo, slugEn } = Astro.props;

// Navigation items with bilingual labels
const navItems = [
  { href: '/', labelNo: 'Hjem', labelEn: 'Home' },
  { href: '/program', labelNo: 'Program', labelEn: 'Program' },
  { href: '/artister', labelNo: 'Artister', labelEn: 'Artists' },
  { href: '/artikler', labelNo: 'Artikler', labelEn: 'Articles' },
];

// Helper to check if link is active
const isActive = (href: string) => {
  if (href === '/') {
    return currentPath === '/' || currentPath === '';
  }
  return currentPath.startsWith(href);
};
---

<header class="site-header" role="banner">
  <div class="header-container">
    <nav class="header-nav" role="navigation" aria-label={currentLang === 'no' ? 'Hovednavigasjon' : 'Main navigation'}>
      <!-- Logo / Site name -->
      <div class="nav-brand">
        <a href="/" class="brand-link" aria-label={currentLang === 'no' ? 'GÃ¥ til forsiden' : 'Go to homepage'}>
          <span class="brand-text">Festival</span>
        </a>
      </div>

      <!-- Navigation links -->
      <ul class="nav-menu" role="list">
        {navItems.map((item) => (
          <li class="nav-item">
            <a
              href={item.href}
              class:list={['nav-link', { 'active': isActive(item.href) }]}
              aria-current={isActive(item.href) ? 'page' : undefined}
            >
              {currentLang === 'no' ? item.labelNo : item.labelEn}
            </a>
          </li>
        ))}
      </ul>

      <!-- Language switcher -->
      <div class="nav-actions">
        <LanguageSwitcher
          currentLang={currentLang}
          currentPath={currentPath}
          slugNo={slugNo}
          slugEn={slugEn}
        />
      </div>
    </nav>
  </div>
</header>

<style>
  /* ============================================
     INTRINSIC RESPONSIVE NAVIGATION
     ============================================

     Hybrid approach:
     - Media queries: Page-level positioning decisions ONLY
     - Intrinsic patterns: All sizing, spacing, and layout
     - Container queries: Component-level adaptation

     Mobile-first design that scales naturally to desktop.
  */

  .site-header {
    /* Sticky positioning - same on all screen sizes */
    position: sticky;
    top: 0;
    z-index: var(--nav-z-index);
    background-color: var(--color-background);
    border-bottom: 1px solid var(--color-border);

    /* Enable container queries for nested components */
    container-type: inline-size;
    container-name: header;

    /* Subtle shadow for depth */
    box-shadow: var(--shadow-xs);
  }

  .header-container {
    /* Intrinsic max-width pattern */
    max-inline-size: min(100%, var(--container-max-width));
    margin-inline: auto;
    padding-inline: var(--nav-padding-inline);
  }

  .header-nav {
    /* Flexbox with intrinsic gap */
    display: flex;
    align-items: center;
    gap: var(--nav-gap);

    /* Fluid padding based on viewport */
    padding-block: var(--nav-padding-block);

    /* Mobile: Stack vertically if space is tight */
    flex-wrap: wrap;
  }

  /* ============================================
     BRAND / LOGO SECTION
     ============================================ */

  .nav-brand {
    /* Brand gets priority in flex layout */
    flex-shrink: 0;
  }

  .brand-link {
    display: inline-flex;
    align-items: center;
    text-decoration: none;
    color: var(--color-blue);
    font-weight: var(--font-weight-bold);
    font-size: var(--font-size-xl);

    /* Smooth transition for interactions */
    transition: color var(--transition-fast);
  }

  .brand-text {
    /* Ensure brand text doesn't break awkwardly */
    white-space: nowrap;
  }

  @media (hover: hover) {
    .brand-link:hover {
      color: var(--color-green);
    }
  }

  .brand-link:focus-visible {
    outline: 2px solid var(--color-blue);
    outline-offset: 4px;
  }

  /* ============================================
     NAVIGATION MENU
     ============================================ */

  .nav-menu {
    /* Remove list styling */
    list-style: none;
    margin: 0;
    padding: 0;

    /* Intrinsic flexbox layout */
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: clamp(var(--space-2), 2vw, var(--space-5));

    /* Allow menu to grow and take available space */
    flex: 1;
  }

  .nav-item {
    /* Items wrap naturally if needed */
    flex-shrink: 0;
  }

  .nav-link {
    /* Intrinsic padding for touch targets */
    display: inline-block;
    padding: clamp(var(--space-1), 1.5vw, var(--space-2))
             clamp(var(--space-2), 2vw, var(--space-3));

    /* Typography */
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-medium);
    color: var(--color-blue);
    text-decoration: none;

    /* Smooth transitions */
    transition:
      color var(--transition-fast),
      background-color var(--transition-fast);

    /* Ensure minimum touch target size (44x44px) */
    min-block-size: 44px;
    display: flex;
    align-items: center;
  }

  @media (hover: hover) {
    .nav-link:hover {
      color: var(--color-green);
      text-decoration: underline;
      text-decoration-thickness: 2px;
      text-underline-offset: 4px;
    }
  }

  .nav-link:focus-visible {
    outline: 2px solid var(--color-blue);
    outline-offset: 2px;
  }

  /* Active page indicator */
  .nav-link.active {
    color: var(--color-green);
    font-weight: var(--font-weight-bold);
    position: relative;
  }

  .nav-link.active::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 3px;
    background-color: var(--color-green);
  }

  /* ============================================
     NAVIGATION ACTIONS (Language switcher, etc.)
     ============================================ */

  .nav-actions {
    /* Actions stay on the right */
    margin-inline-start: auto;
    flex-shrink: 0;
  }

  /* ============================================
     RESPONSIVE LAYOUT WITH MEDIA QUERIES
     ============================================

     Media queries are used ONLY for major layout decisions:
     - Where does navigation go? (top on all screens)
     - How do items arrange? (handled by flexbox wrapping)

     Individual element sizing uses intrinsic patterns above.
  */

  /* Mobile: Compact navigation */
  @media (max-width: 767px) {
    .header-nav {
      /* Allow vertical stacking on very narrow screens */
      justify-content: space-between;
    }

    .nav-menu {
      /* On mobile, menu can take full width */
      flex-basis: 100%;
      order: 2;
    }

    .nav-actions {
      /* Actions stay in header row */
      order: 1;
    }
  }

  /* Tablet and up: Horizontal layout */
  @media (min-width: 768px) {
    .header-nav {
      /* Distribute items evenly */
      justify-content: space-between;
    }

    .nav-menu {
      /* Center menu items */
      justify-content: center;
    }
  }

  /* Desktop: Generous spacing */
  @media (min-width: 1024px) {
    .nav-menu {
      gap: var(--space-6);
    }
  }

  /* ============================================
     CONTAINER QUERY ENHANCEMENTS
     ============================================

     When header has limited space, compact the navigation.
  */

  @container header (max-width: 600px) {
    .nav-link {
      font-size: var(--font-size-sm);
      padding: var(--space-1) var(--space-2);
    }

    .brand-link {
      font-size: var(--font-size-lg);
    }
  }

  /* ============================================
     ACCESSIBILITY ENHANCEMENTS
     ============================================ */

  /* Ensure focus is visible in high contrast mode */
  @media (prefers-contrast: high) {
    .nav-link:focus-visible,
    .brand-link:focus-visible {
      outline-width: 3px;
      outline-offset: 4px;
    }
  }

  /* Respect reduced motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .nav-link,
    .brand-link {
      transition: none;
    }
  }
</style>
