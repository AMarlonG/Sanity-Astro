---
export interface Props {
  initialFilters?: {
    eventDate?: string;
  };
  filterOptions?: {
    eventDates?: any[];
  };
}

const { 
  initialFilters = {}, 
  filterOptions = {} 
} = Astro.props;

// Hent URL-parametere for Ã¥ opprettholde state
const url = new URL(Astro.request.url);
const currentFilters = {
  eventDate: url.searchParams.get('eventDate') || initialFilters.eventDate || '',
};
---

<div class="event-filter" data-filter-container>
  <form 
    hx-post="/api/filter-events" 
    hx-target="#results-container"
    hx-indicator="#loading-indicator"
    hx-trigger="change"
    hx-push-url="/program"
    hx-swap="innerHTML"
    class="filter-form"
  >
    <!-- Dato-filter -->
    <div class="filter-group">
      <label for="eventDate">Velg dato:</label>
      <select 
        name="eventDate" 
        id="eventDate"
        class="filter-select"
      >
        <option value="">Alle datoer</option>
        {filterOptions.eventDates?.map((date) => (
          <option 
            value={date.date} 
            selected={currentFilters.eventDate === date.date}
          >
            {date.title}
          </option>
        ))}
      </select>
    </div>

    <!-- Loading indikator -->
    <div id="loading-indicator" class="htmx-indicator">
      <span>Laster...</span>
    </div>

    <!-- Nullstill-knapp -->
    <button 
      type="button" 
      onclick="htmx.trigger('#eventDate', 'change')"
      class="reset-button"
    >
      Nullstill filter
    </button>
  </form>
</div>

<style>
  .event-filter {
    margin-bottom: 2rem;
  }

  .filter-form {
    display: flex;
    gap: 1rem;
    align-items: end;
    flex-wrap: wrap;
  }

  .filter-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .filter-group label {
    font-weight: 500;
    font-size: 0.9rem;
  }

  .filter-select {
    padding: 0.5rem;
    border: 1px solid #ccc;
    border-radius: 4px;
    min-width: 200px;
  }

  .htmx-indicator {
    display: none;
    color: #666;
    font-style: italic;
  }

  .htmx-request .htmx-indicator {
    display: inline;
  }

  .reset-button {
    padding: 0.5rem 1rem;
    background: #f0f0f0;
    border: 1px solid #ccc;
    border-radius: 4px;
    cursor: pointer;
  }

  .reset-button:hover {
    background: #e0e0e0;
  }
</style> 