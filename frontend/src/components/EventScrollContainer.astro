---
import { sanityClient } from "sanity:client";
import imageUrlBuilder from "@sanity/image-url";
import type { SanityImageSource } from "@sanity/image-url/lib/types/types";

interface Props {
  title?: string
  events?: any[]
  showScrollbar?: boolean
  showDate?: boolean
  showTime?: boolean
  showVenue?: boolean
  showArtists?: boolean
  sortBy?: 'date-asc' | 'date-desc' | 'title-asc' | 'manual'
  cardFormat?: '16:9' | '4:5'
}

const {
  title,
  events = [],
  showScrollbar = false,
  showDate = true,
  showTime = true,
  showVenue = true,
  showArtists = true,
  sortBy = 'date-asc',
  cardFormat = '16:9'
} = Astro.props

// Opprett Sanity Image URL Builder
const { projectId, dataset } = sanityClient.config();
const urlFor = (source: SanityImageSource) =>
  projectId && dataset
    ? imageUrlBuilder({ projectId, dataset }).image(source)
    : null;

// Hent faktiske event-data fra referansene
let eventData = []
if (events && events.length > 0) {
  const eventIds = events.map((item: any) => item._ref).filter(Boolean)
  if (eventIds.length > 0) {
    const EVENT_QUERY = `*[_type == "event" && _id in $eventIds]{
      _id,
      title,
      slug,
      "image": image.image,
      "imageAlt": image.alt,
      eventDate,
      eventTime,
      venue->{title},
      artists[]->{name}
    }`
    eventData = await sanityClient.fetch(EVENT_QUERY, { eventIds })
  }
}

// Hjelpefunksjon for å escape HTML
function escapeHtml(text: string): string {
  return text
    .replace(/&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#039;')
}

// Generer bilde-URL med Sanity's automatiske hotspot-håndtering
const getImageUrl = (image: any, width: number, height: number) => {
  if (!image || !urlFor) return '';
  return urlFor(image).width(width).height(height).url() || '';
};

// Sorter arrangementer basert på valgt sortering
let sortedEvents = [...eventData]
switch (sortBy) {
  case 'date-asc':
    sortedEvents.sort((a, b) => {
      const dateA = a.eventDate?.date ? new Date(a.eventDate.date) : new Date(0)
      const dateB = b.eventDate?.date ? new Date(b.eventDate.date) : new Date(0)
      return dateA.getTime() - dateB.getTime()
    })
    break
  case 'date-desc':
    sortedEvents.sort((a, b) => {
      const dateA = a.eventDate?.date ? new Date(a.eventDate.date) : new Date(0)
      const dateB = b.eventDate?.date ? new Date(b.eventDate.date) : new Date(0)
      return dateB.getTime() - dateA.getTime()
    })
    break
  case 'title-asc':
    sortedEvents.sort((a, b) => (a.title || '').localeCompare(b.title || ''))
    break
  case 'manual':
  default:
    // Behold manuell rekkefølge
    break
}

// CSS-klasser basert på props
const containerClass = 'event-scroll-container'
const scrollbarClass = showScrollbar ? '' : 'hide-scrollbar'
const cardFormatClass = `card-format-${cardFormat.replace(':', '-')}`
---

<div class={`${containerClass} ${scrollbarClass} ${cardFormatClass}`}>
  {title && <h3 class="event-scroll-title">{title}</h3>}
  <div class="event-scroll-wrapper">
    {sortedEvents.map((event) => {
      if (!event) return null
      
      const eventDate = event.eventDate?.date ? new Date(event.eventDate.date) : null
      const dateString = eventDate ? eventDate.toLocaleDateString('nb-NO') : ''
      const timeString = event.eventTime || ''
      const venueName = event.venue?.title || ''
      const artistNames = event.artists?.map((artist: any) => artist.name).join(', ') || ''
      const eventSlug = event.slug?.current || ''
      
      const eventImage = event.image || null
      const imageAlt = event.imageAlt || event.title || ''
      
      // Beregn høyde basert på cardFormat
      const [widthRatio, heightRatio] = cardFormat.split(':').map(Number)
      const cardWidth = cardFormat === '16:9' ? 350 : 300
      const cardHeight = Math.round((cardWidth * heightRatio) / widthRatio)
      
      return (
        <div class="event-item">
          <div class="event-card">
            {eventImage && (
              <div class="event-image">
                <img 
                  src={getImageUrl(eventImage, cardWidth, cardHeight)} 
                  alt={imageAlt}
                />
              </div>
            )}
            <div class="event-content">
              <h4 class="event-title">{event.title || ''}</h4>
              {showDate && dateString && <div class="event-date">{dateString}</div>}
              {showTime && timeString && <div class="event-time">{timeString}</div>}
              {showVenue && venueName && <div class="event-venue">{venueName}</div>}
              {showArtists && artistNames && <div class="event-artists">{artistNames}</div>}
              {event.buttonText && (
                <a 
                  href={event.buttonUrl || '#'} 
                  class="event-button"
                  target={event.buttonOpenInNewTab ? '_blank' : undefined}
                  rel={event.buttonOpenInNewTab ? 'noopener noreferrer' : undefined}
                >
                  {event.buttonText}
                </a>
              )}
              {eventSlug && (
                <a href={`/arrangementer/${eventSlug}`} class="event-link">
                  Les mer
                </a>
              )}
            </div>
          </div>
        </div>
      )
    })}
  </div>
</div>

<style>
  .event-scroll-container {
    width: 100%;
    margin: 2rem 0;
  }

  .event-scroll-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: #333;
  }

  .event-scroll-wrapper {
    display: flex;
    overflow-x: auto;
    gap: 1rem;
    padding: 0.5rem 0;
  }

  .event-item {
    flex-shrink: 0;
  }

  .event-card {
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  /* Format variants */
  .card-format-16-9 .event-card {
    aspect-ratio: 16/9;
    width: 350px;
  }

  .card-format-4-5 .event-card {
    aspect-ratio: 4/5;
    width: 300px;
  }

  .event-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  .event-image {
    width: 100%;
    height: 180px;
    overflow: hidden;
  }

  .event-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .event-content {
    padding: 1rem;
  }

  .event-title {
    font-size: 1.1rem;
    font-weight: 600;
    margin: 0 0 0.5rem 0;
    color: #333;
  }

  .event-date {
    font-size: 0.9rem;
    color: #007bff;
    font-weight: 500;
    margin-bottom: 0.25rem;
  }

  .event-time {
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 0.25rem;
  }

  .event-venue {
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 0.25rem;
  }

  .event-artists {
    font-size: 0.9rem;
    color: #555;
    margin-bottom: 1rem;
    font-style: italic;
  }

  .event-button {
    display: inline-block;
    padding: 0.5rem 1rem;
    background: #007bff;
    color: white;
    text-decoration: none;
    border-radius: 4px;
    font-size: 0.9rem;
    transition: background-color 0.2s ease;
    margin-right: 0.5rem;
  }

  .event-button:hover {
    background: #0056b3;
  }

  .event-link {
    display: inline-block;
    padding: 0.5rem 1rem;
    background: transparent;
    color: #007bff;
    text-decoration: none;
    border: 1px solid #007bff;
    border-radius: 4px;
    font-size: 0.9rem;
    transition: all 0.2s ease;
  }

  .event-link:hover {
    background: #007bff;
    color: white;
  }

  /* Card size variants */
  .card-size-small .event-card {
    width: 250px;
  }

  .card-size-medium .event-card {
    width: 350px;
  }

  .card-size-large .event-card {
    width: 450px;
  }

  .card-size-xlarge .event-card {
    width: 550px;
  }

  /* Card style variants */
  .card-style-rounded .event-card {
    border-radius: 16px;
  }

  .card-style-shadowed .event-card {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .card-style-minimal .event-card {
    box-shadow: none;
    border: 1px solid #e0e0e0;
  }

  .card-style-date-focused .event-date {
    font-size: 1.1rem;
    font-weight: 600;
    color: #007bff;
  }

  /* Gap variants */
  .gap-small .event-scroll-wrapper {
    gap: 0.75rem;
  }

  .gap-medium .event-scroll-wrapper {
    gap: 1rem;
  }

  .gap-large .event-scroll-wrapper {
    gap: 1.75rem;
  }

  .gap-xlarge .event-scroll-wrapper {
    gap: 2.25rem;
  }

  /* Hide scrollbar */
  .hide-scrollbar .event-scroll-wrapper {
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  .hide-scrollbar .event-scroll-wrapper::-webkit-scrollbar {
    display: none;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .event-scroll-wrapper {
      gap: 0.75rem;
    }
    
    .card-size-medium .event-card,
    .card-size-large .event-card,
    .card-size-xlarge .event-card {
      width: 300px;
    }
  }
</style> 