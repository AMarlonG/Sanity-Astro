---
export interface Props {
  videoType: 'sanity' | 'youtube' | 'vimeo' | 'external'
  video?: any
  youtubeUrl?: string
  vimeoUrl?: string
  externalUrl?: string
  aspectRatio?: string
  title?: string
  description?: string
  autoplay?: boolean
  muted?: boolean
  controls?: boolean
  loop?: boolean
  className?: string
}

const {
  videoType,
  video,
  youtubeUrl,
  vimeoUrl,
  externalUrl,
  aspectRatio = '16:9',
  title,
  description,
  autoplay = false,
  muted = true,
  controls = true,
  loop = false,
  className = ''
} = Astro.props

// Beregn aspect ratio
const [width, height] = aspectRatio.split(':').map(Number)
const aspectRatioValue = `${width}/${height}`

// Hjelpefunksjoner for å ekstrahere video-IDer
function extractYouTubeId(url: string): string | null {
  if (!url) return null
  const match = url.match(/(?:youtube\.com\/watch\?v=|youtu\.be\/)([^&\n?#]+)/)
  return match ? match[1] : null
}

function extractVimeoId(url: string): string | null {
  if (!url) return null
  const match = url.match(/vimeo\.com\/(\d+)/)
  return match ? match[1] : null
}

// Generer video-kilde basert på type
let videoSource = ''
let videoId = ''

switch (videoType) {
  case 'youtube':
    if (youtubeUrl) {
      videoId = extractYouTubeId(youtubeUrl) || ''
      videoSource = `https://www.youtube.com/embed/${videoId}`
    }
    break
  case 'vimeo':
    if (vimeoUrl) {
      videoId = extractVimeoId(vimeoUrl) || ''
      videoSource = `https://player.vimeo.com/video/${videoId}`
    }
    break
  case 'external':
    videoSource = externalUrl || ''
    break
  case 'sanity':
    videoSource = video?.asset?.url || ''
    break
}
---

<figure class={`video-component ${className}`}>
  {videoType === 'sanity' && videoSource ? (
    <video
      controls={controls}
      autoplay={autoplay}
      muted={muted}
      loop={loop}
      preload="metadata"
      playsinline
      class="video-element"
      title={title}
      style={`aspect-ratio: ${aspectRatioValue};`}
    >
      <source src={videoSource} type="video/mp4" />
      <track kind="captions" srclang="no" label="Norsk" />
      Din nettleser støtter ikke HTML5 video.
    </video>
  ) : videoType === 'youtube' && videoSource ? (
    <iframe
      src={`${videoSource}?autoplay=${autoplay ? 1 : 0}&mute=${muted ? 1 : 0}&controls=${controls ? 1 : 0}&loop=${loop ? 1 : 0}`}
      title={title || 'YouTube video'}
      class="video-element"
      style={`aspect-ratio: ${aspectRatioValue};`}
      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
      allowfullscreen
    ></iframe>
  ) : videoType === 'vimeo' && videoSource ? (
    <iframe
      src={`${videoSource}?autoplay=${autoplay ? 1 : 0}&muted=${muted ? 1 : 0}&controls=${controls ? 1 : 0}&loop=${loop ? 1 : 0}`}
      title={title || 'Vimeo video'}
      class="video-element"
      style={`aspect-ratio: ${aspectRatioValue};`}
      allow="autoplay; fullscreen; picture-in-picture"
      allowfullscreen
    ></iframe>
  ) : videoType === 'external' && videoSource ? (
    <video
      controls={controls}
      autoplay={autoplay}
      muted={muted}
      loop={loop}
      preload="metadata"
      playsinline
      class="video-element"
      title={title}
      style={`aspect-ratio: ${aspectRatioValue};`}
    >
      <source src={videoSource} type="video/mp4" />
      <track kind="captions" srclang="no" label="Norsk" />
      Din nettleser støtter ikke HTML5 video.
    </video>
  ) : (
    <div class="video-error">
      <p>Kunne ikke laste video</p>
    </div>
  )}

  {(title || description) && (
    <figcaption class="video-caption">
      {title && <span class="video-caption-title">{title}</span>}
      {description && <span class="video-caption-description">{description}</span>}
    </figcaption>
  )}
</figure>

<style>
  .video-component {
    margin: 2rem 0;
    max-width: 100%;
  }

  .video-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .video-description {
    margin-bottom: 1rem;
    line-height: 1.6;
  }

  .video-element {
    width: 100%;
    border: none;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  /* For video-elementer (Sanity og ekstern) */
  .video-element[src] {
    object-fit: cover;
    object-position: center;
  }

  .video-error {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #f8f9fa;
  }

  /* Responsivt design */
  @media (max-width: 768px) {
    .video-component {
      margin: 1.5rem 0;
    }

    .video-title {
      font-size: 1.1rem;
    }
  }

  .video-caption {
    margin-top: 0.75rem;
    font-size: 0.9rem;
    line-height: 1.5;
  }

  .video-caption-title {
    display: block;
    font-weight: 600;
    margin-bottom: 0.25rem;
  }

  .video-caption-description {
    display: block;
    font-style: italic;
  }

  /* Tilgjengelighet */
  .video-element:focus {
    outline: 2px solid #0066cc;
    outline-offset: 2px;
  }
</style> 